<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLimpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KRcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAACAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAQQILxAtU8gOJEKzAgcNUQAAABEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwIJEksPNGToGEaB/x1Jhf8bRoD+Ei9W0gYRH3UAAAAfAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYFESBuETlt9xI+dv8YRX//HUmE/xxIg/8cSIT/HEeC/xY5aOsKGzOZAQMGNgAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMCBoylBI8c/4SPnb/Ej52/xhFgP8dSYT/HEiD/xxIg/8cR4L/G0eB/xtG
        gf8YQXf6DiZHuwMKE1cAAAAQAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAIDGgokRboSPHP/Ej11/xI+dv8SPnb/GEWA/xxIg/8cSIP/HEiD/xxH
        gv8bRoH/G0aA/xpGgP8aRX//GUN9/xIwWtoHFCV9AAECIAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEFCjANLFXYETxz/xI9dP8SPXT/Ej11/xI+dv8YRX//HEiD/xxI
        g/8cSIL/GkN6/xlAdv8aRH3/GkV//xpFf/8aRH//GUR+/xlEff8VOmzxChw1mAAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCxVODzNi7RE7cv8RPHP/Ejx0/xI9df8SPXX/Ej52/xhE
        fv8dSYT/HEiD/xtGfv8WOGb/EzBY/xU4Zv8YP3P/GUN8/xlEfv8ZRH7/GUR9/xhDff8WPnTvAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ4xXuERO3H/ETtx/xA5bf8SPHL/Ej10/xI9
        df8SPnb/GER+/xxIg/8cR4L/Fzxu/zBenf82Z6j/I0h6/xMwWP8UNmP/Fz1x/xlCe/8ZQ33/GEN9/xdA
        ePkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDdp5xE7cf8QN2r/DjBc/xA1
        Zv8SPHL/Ej11/xI9df8YRH3/HEiD/xpCef8nUIf/QXW8/0B1vP8/dbv/O2+z/yhRhv8WNF3/EzNf/xY8
        b/8YQXn/F0F5/xIyXgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQOGrvEThs/xM0
        Yf8iQG//DCZJ/w8zYf8SPHP/Ej11/xhEfv8cRoD/HkR4/0N2vP9Dd77/Qne+/0F2vf9Adrz/P3W7/z1z
        uf8uWpT/Gjtn/xExWv8VOWv/ES9YDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA2
        aPgaO2z/TnzA/1uN0/9Pe73/K0t+/xExX/8SO3H/GEN9/xtCdv9BcrT/R3vB/0Z6wP9FecD/RHm//0N3
        vv9Cd73/QHa8/0B2vP8+dbv/NGWj/x9Dc/8ZN18dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAALJkgCIUN2/lKDyv9ajNP/XI7U/1+Q1P9iktX/WYXG/zJWj/8ZQHX/O2qp/0t/xf9KfcP/SXzD/0d7
        wv9GesH/RXrA/0R5v/9DeL7/Qni9/0F3vP9Adrz/PnW6/z50uug9dLqAPXO5FwAAAAAAAAAAAAAAAAAA
        AAAAAAAAKD11AkBmqItUh8//WYzT/1uN0/9ej9T/YZHU/2OT1f9llNb/YpbS/ySUuf8nlMH/Q4S//02B
        xv9Lf8X/Sn7E/0l9w/9IfML/R3vB/0V6wP9Eeb//Q3m+/0J4vv9Bd73/QHa8/z91u/8/drvfPnS6BQAA
        AAAAAAAAAAAAACc6cAtEbLCvVYjR/1iL0/9ajNP/XY7U/2CR1P9iktX/ZZTV/1aWzf8OqtD/FNH1/wvQ
        9v8Dv+T/EaPK/y+Mvv9Jg8P/TIDF/0t/xP9JfcP/SH3C/0d8wf9Ge8D/RXq//0N5v/9CeL3/QXe9/0t/
        wGMAAAAAAAAAAAAAAAAtRXwbR3O3zVSI0v9XitP/WYzT/1yO0/9ej9T/YZHU/2WV1v9Clcb/Brfc/x7W
        +f8q2fz/Ktn9/yja/P8Z1fr/B83z/wK22/8bm8b/OoS6/0yBxP9Lf8T/SX7D/0h9wv9HfML/RnvB/0V6
        wP9Fer/Ve6HRAwAAAAAAAAAAM06HMUp4vuRTh9H/VonS/1iL0/9bjdP/Xo/U/2CR1P9jk9P/LZG6/wq+
        4/8n2fv/KNn9/yfZ/f8n2f3/Kdn8/yfY/P8q2vz/JNn8/xXU+f8Lu97/CKPJ/yeHtv9Bf7v/S4DF/0l+
        w/9IfcL/R3zB/0Z8wVIAAAAAAAAAAAAAAABKd72DU4bQ+lWJ0v9YitP/WozT/12O1P9fkNT/WZDM/xiK
        sf8Ur9P/LNP2/yfZ/f8n2f3/J9n9/yfZ/f8p2fz/J9j8/yfZ/f8n2f3/HND1/xLL8P8BxO7/B63Z/wSk
        zv8Tk77/LoS4/0d/v/9JfsPLR3zCAQAAAAAAAAAAAAAAAAAAAABTg8omV4rTtVmL0v9cjdP/X4/U/0mO
        xf8Llr7/BKXQ/xGq0f8LqdL/FMbr/yDQ9P8n2f3/J9n9/ynZ/P8n1/v/I9X6/w/L8v8b0PX/LNT2/yPQ
        9P8auOH/CLDd/wWu3P8Erdv/C6rW/1+e3MNckNUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW43TU1+P
        1OU2ibv/BaLM/wWr1/8HrNj/JLfc/xm13P8HyfH/AcPs/wbA5/8Txuz/Is/z/xnN8v8SzfP/KdP2/ynR
        9v8o0fb/KM3z/y+43v8vud//Jrvi/yHF7/8hzvz/e7z5/2ec3IkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUoTIniil3v8LtuX/EbTe/y663v8stdv/LLbd/yzU9v8i0/b/FM/1/wXJ8v8Ewur/Gsnt/yzT
        9v8o0fb/KNH2/yjR9v8ozfP/Lrfe/zXB6f9D0Pn/SdT8/07R/P9/u/n/f7f1/mCT01YAAAAAAAAAAAAA
        AAAAAAAAAAAAAEJspCJeleH6NbXy/zHN+f9Dzvn/Osbx/zO/6P8tueD/KdL2/yjR9v8p0fb/K9P2/yXU
        9v8JqdL/D63V/xq74v8lzPH/KNH2/yrQ9v9BzfX/RNL7/0nQ+/9lwff/frj2/4G5+P+Du/r/fLLw9V6P
        zjgAAAAAAAAAAAAAAAAAAAAAVIfMnmGZ6P9Vru7/Rsb2/z/M+f8/zPn/P8z5/z7N+f8t1vz/KtT6/yjS
        9/8jyvD/GLjf/wSq1/8Grdn/BavY/wes2f8cxO//K8/5/0rP+v9cwvb/drTz/3u09P99tvX/gLj3/4O7
        +f+FvPr/e7DurgAAAAAAAAAAAAAAAEVwqx5fluH7Ypro/2Kb6P9jm+j/XaPr/1Ky8P9HwfX/Psz5/y7X
        /v8s1v3/I8v3/yTH9P8yx+//GLrl/wqz3/8Pu+n/Gsj4/xzK+f8lx/j/c67u/3Ww8P94svL/erTz/3y2
        9f+AuPf/g7r42YW8+lEAAAAAAAAAAAAAAAAAAAAAAAAAAGOb6BtimudhY5vnqWKa5+5jm+j/ZJzp/2Sc
        6P9eoer/IMr4/x/H9v83zvr/RM/5/z/N+f9Bz/r5O9z91DXU++4ozvr/Hcr5/yXH+P9yre3/da/v/3ex
        8f96s/P/fbb064C49m2DuvgFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWo7VBF+V
        3jximuWHY5vm02Ge6v8qzPn/Q9D5/0DN+f8/zPn/P835/TXZ/cw13f/CM9z+wD7W/OND0vr/Qcv4/3Gs
        7f91r+//d7Hw+Hqz8ot8tfQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAb6DaI1TH8nREw/PJQcr4/j/M+f841PzeM93/vzbd/8Iz3f+/Mt3/tkfL
        95psrez9cq3s/3Wv7qx3sfAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABanN4nUrTwhDPc/m0y3P+jNt3/vTPd
        /2oz3f8QAAAAAHCr61VyrexBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADP9v8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////4////4D///8AP//+AA///AAB//gAAH/gAAA/wAAAP8AAAH/gA
        AA/4AAAP+AAAD/AAAAPgAAABwAAAA4AAAAMAAAAHAAAAB4AAAAfgAAAH8AAAA+AAAAHgAAABwAAAA+AA
        AAf8AAAf/8AAf//4Cf///7////////////8=
</value>
  </data>
</root>